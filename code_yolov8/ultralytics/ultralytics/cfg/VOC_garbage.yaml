# YOLOv5 🚀 by Ultralytics, GPL-3.0 license
# PASCAL VOC dataset http://host.robots.ox.ac.uk/pascal/VOC by University of Oxford
# Example usage: python train.py --data VOC.yaml
# parent
# ├── yolov5
# └── datasets
#     └── VOC  ← downloads here (2.8 GB)


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: C:/Users/14794/yolov8/data/data/yolo
train: # train images (relative to 'path')  16551 images
  - train
val: # val images (relative to 'path')  4952 images
  - val
test: # test images (optional)
  - test

# Classes
names:
  0: Fast food container
  1: Book paper
  2: Power bank
  3: Leftover food
  4: Bag
  5: Trash bin
  6: Plastic kitchenware
  7: Plastic dishes
  8: Plastic toys
  9: Plastic hangers
  10: Large bone
  11: Dry battery
  12: Express delivery bag
  13: Plug and wire
  14: Old clothes
  15: Aluminum can
  16: Pillow
  17: Fruit peel and flesh
  18: Towel
  19: Plush toy
  20: Contaminated plastic
  21: Contaminated paper
  22: Toiletries
  23: Cigarette butt
  24: Toothpick
  25: Glass dishes
  26: Cutting board
  27: Chopsticks
  28: Cardboard box
  29: Paper bag
  30: Flower pot
  31: Tea residue
  32: Vegetable stalks and leaves
  33: Eggshell
  34: Seasoning bottle
  35: Ointment
  36: Expired medicine
  37: Wine bottle
  38: Metal kitchenware
  39: Metal dishes
  40: Metal food cans
  41: Pot
  42: Ceramic dishes
  43: Shoes
  44: Edible oil barrel
  45: Beverage bottle
  46: Beverage carton
  47: Fish bones



#  0: 一次性快餐盒
#  1: 书籍纸张
#  2: 充电宝
#  3: 剩饭剩菜
#  4: 包
#  5: 垃圾桶
#  6: 塑料厨具
#  7: 塑料器皿
#  8: 塑料玩具
#  9: 塑料衣架
#  10: 大骨头
#  11: 干电池
#  12: 快递纸袋
#  13: 插头电线
#  14: 旧衣服
#  15: 易拉罐
#  16: 枕头
#  17: 果皮果肉
#  18: 毛巾
#  19: 毛绒玩具
#  20: 污损塑料
#  21: 污损用纸
#  22: 洗护用品
#  23: 烟蒂
#  24: 牙签
#  25: 玻璃器皿
#  26: 砧板
#  27: 筷子
#  28: 纸盒纸箱
#  29: 纸袋
#  30: 花盆
#  31: 茶叶渣
#  32: 菜帮菜叶
#  33: 蛋壳
#  34: 调料瓶
#  35: 软膏
#  36: 过期药物
#  37: 酒瓶
#  38: 金属厨具
#  39: 金属器皿
#  40: 金属食品罐
#  41: 锅
#  42: 陶瓷器皿
#  43: 鞋
#  44: 食用油桶
#  45: 饮料瓶
#  46: 饮料盒
#  47: 鱼骨
# Download script/URL (optional) ---------------------------------------------------------------------------------------
download: |
  import xml.etree.ElementTree as ET

  from tqdm import tqdm
  from utils.general import download, Path


  def convert_label(path, lb_path, year, image_id):
      def convert_box(size, box):
          dw, dh = 1. / size[0], 1. / size[1]
          x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 - 1, box[1] - box[0], box[3] - box[2]
          return x * dw, y * dh, w * dw, h * dh

      in_file = open(path / f'VOC{year}/Annotations/{image_id}.xml')
      out_file = open(lb_path, 'w')
      tree = ET.parse(in_file)
      root = tree.getroot()
      size = root.find('size')
      w = int(size.find('width').text)
      h = int(size.find('height').text)

      names = list(yaml['names'].values())  # names list
      for obj in root.iter('object'):
          cls = obj.find('name').text
          if cls in names and int(obj.find('difficult').text) != 1:
              xmlbox = obj.find('bndbox')
              bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in ('xmin', 'xmax', 'ymin', 'ymax')])
              cls_id = names.index(cls)  # class id
              out_file.write(" ".join([str(a) for a in (cls_id, *bb)]) + '\n')


  # Download
  dir = Path(yaml['path'])  # dataset root dir
  url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
  urls = [f'{url}VOCtrainval_06-Nov-2007.zip',  # 446MB, 5012 images
          f'{url}VOCtest_06-Nov-2007.zip',  # 438MB, 4953 images
          f'{url}VOCtrainval_11-May-2012.zip']  # 1.95GB, 17126 images
  download(urls, dir=dir / 'images', delete=False, curl=True, threads=3)

  # Convert
  path = dir / 'images/VOCdevkit'
  for year, image_set in ('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test'):
      imgs_path = dir / 'images' / f'{image_set}{year}'
      lbs_path = dir / 'labels' / f'{image_set}{year}'
      imgs_path.mkdir(exist_ok=True, parents=True)
      lbs_path.mkdir(exist_ok=True, parents=True)

      with open(path / f'VOC{year}/ImageSets/Main/{image_set}.txt') as f:
          image_ids = f.read().strip().split()
      for id in tqdm(image_ids, desc=f'{image_set}{year}'):
          f = path / f'VOC{year}/JPEGImages/{id}.jpg'  # old img path
          lb_path = (lbs_path / f.name).with_suffix('.txt')  # new label path
          f.rename(imgs_path / f.name)  # move image
          convert_label(path, lb_path, year, id)  # convert labels to YOLO format
